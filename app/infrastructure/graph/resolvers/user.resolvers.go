package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.29

import (
	"context"

	"github.com/alvaro84seis/gqlgen-todos/app/domain/entity"
	"github.com/alvaro84seis/gqlgen-todos/app/infrastructure/graph/generated"
	"github.com/labstack/gommon/log"
)

// FindByID is the resolver for the FindByID field.
func (r *queryResolver) FindByID(ctx context.Context, id *string) ([]*entity.User, error) {
	user, err := r.GetUserByIDUseCase.GetUserByID(*id)

	return []*entity.User{user}, err
}

// Role is the resolver for the role field.
func (r *userResolver) Role(ctx context.Context, obj *entity.User) (*entity.Role, error) {
	log.Info(obj.ID)
	return &entity.Role{
		ID:   "1",
		Name: "Rol Uno",
	}, nil
}

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

// User returns generated.UserResolver implementation.
func (r *Resolver) User() generated.UserResolver { return &userResolver{r} }

type queryResolver struct{ *Resolver }
type userResolver struct{ *Resolver }
